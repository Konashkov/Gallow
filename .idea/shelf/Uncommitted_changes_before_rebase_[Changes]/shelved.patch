Index: js/state.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const createState = function () {\r\n    this.counter = 0;\r\n    this.status = STATUS_CONTINUE;\r\n    this.word = '';\r\n    this.field = [];\r\n    this.mistakes = 0;\r\n    return {\r\n        counter,\r\n        status,\r\n        word,\r\n        field,\r\n        mistakes,\r\n\r\n        setStatus: (status) => {\r\n            state.status = status\r\n        },\r\n        setWord: (word) => {\r\n            state.word = word\r\n        },\r\n        setField: (field) => {\r\n            state.field = field\r\n        },\r\n        incriseMistakes: () => {\r\n            const img = document.querySelector('.gallow-img')\r\n            let prevIndex = STAGE_OF_IMG.indexOf(img.getAttribute('src'))\r\n            if (prevIndex + 1 < STAGE_OF_IMG.length)\r\n                img.setAttribute('src', STAGE_OF_IMG[prevIndex + 1])\r\n            if ((prevIndex + 1)===(STAGE_OF_IMG.length - 1)){\r\n                state.status = STATUS_FAIL\r\n                document.removeEventListener('click', f)\r\n            }\r\n        },\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/state.js b/js/state.js
--- a/js/state.js	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/js/state.js	(date 1652286163157)
@@ -1,34 +1,30 @@
-const createState = function () {
-    this.counter = 0;
-    this.status = STATUS_CONTINUE;
-    this.word = '';
-    this.field = [];
-    this.mistakes = 0;
-    return {
-        counter,
-        status,
-        word,
-        field,
-        mistakes,
-
-        setStatus: (status) => {
-            state.status = status
-        },
-        setWord: (word) => {
-            state.word = word
-        },
-        setField: (field) => {
-            state.field = field
-        },
-        incriseMistakes: () => {
-            const img = document.querySelector('.gallow-img')
-            let prevIndex = STAGE_OF_IMG.indexOf(img.getAttribute('src'))
-            if (prevIndex + 1 < STAGE_OF_IMG.length)
-                img.setAttribute('src', STAGE_OF_IMG[prevIndex + 1])
-            if ((prevIndex + 1)===(STAGE_OF_IMG.length - 1)){
-                state.status = STATUS_FAIL
-                document.removeEventListener('click', f)
-            }
-        },
-    }
-}
+class createState {
+    constructor() {
+        this.status = STATUS_CONTINUE;
+        this.word = '';
+        this.field = [];
+    }
+}
+const setStatus =
+    (status) => {
+        app.state.status = status
+    };
+const setWord =
+    (word) => {
+        app.state.word = word
+    };
+const setField =
+    (field) => {
+        app.state.field = field
+    };
+const incriseMistakes =
+    () => {
+        const img = document.querySelector('.gallow-img')
+        let prevIndex = STAGE_OF_IMG.indexOf(img.getAttribute('src'))
+        if (prevIndex + 1 < STAGE_OF_IMG.length)
+            img.setAttribute('src', STAGE_OF_IMG[prevIndex + 1])
+        if ((prevIndex + 1) === (STAGE_OF_IMG.length - 1)) {
+            app.state.status = STATUS_FAIL
+            document.removeEventListener('click', f)
+        }
+    };
\ No newline at end of file
Index: js/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// ------- CONSTANTS -------\r\n// statuses\r\nconst STATUS_WIN = 'STATUS_WIN'\r\nconst STATUS_FAIL = 'STATUS_FAIL'\r\nconst STATUS_CONTINUE = 'STATUS_CONTINUE'\r\nconst STAGE_OF_IMG = ['./img/Gallow-0.svg', './img/Gallow-1.svg', './img/Gallow-2.svg', './img/Gallow-3.svg', './img/Gallow-4.svg', './img/Gallow-5.svg', './img/Gallow-6.svg']\r\n// options\r\nconst alphabet = [\r\n    [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\r\n    [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"],\r\n    [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"]\r\n]\r\n// ------- MAIN STATE ------\r\n\r\nconst f = (e) => {\r\n    const el = e.target;\r\n    if (el.hasAttribute('data-action') && el.getAttribute('data-action') === 'turn') {\r\n        el.setAttribute('disabled', 'true')\r\n        app.turn(el.innerText)\r\n    }\r\n}\r\ndocument.addEventListener('click', f)\r\nconst getNewWord = () => {\r\n  return vocabulary[Math.floor(Math.random() * vocabulary.length)].toUpperCase()\r\n}\r\nconst app = runApp();\r\napp.init( getNewWord())
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/script.js b/js/script.js
--- a/js/script.js	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/js/script.js	(date 1652285471198)
@@ -24,4 +24,7 @@
   return vocabulary[Math.floor(Math.random() * vocabulary.length)].toUpperCase()
 }
 const app = runApp();
-app.init( getNewWord())
\ No newline at end of file
+app.init( getNewWord())
+if(localStorage.getItem('data-state')!==null){
+    loadFromLocaleStorage()
+}
Index: js/fail.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function fail() {\r\n    const KEYS = document.querySelectorAll('.keyboard--btn')\r\n    KEYS.forEach((el) => {\r\n        if(!el.classList.contains('key-right'))\r\n        el.classList.add('keys-fail')\r\n    })\r\n    let rightWord = document.createElement('p')\r\n    rightWord.innerText = 'Right word was: ' + state.word;\r\n    rightWord.classList.add('right-word')\r\n    document.querySelector('.word').after(rightWord)\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/fail.js b/js/fail.js
--- a/js/fail.js	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/js/fail.js	(date 1652286199047)
@@ -5,7 +5,7 @@
         el.classList.add('keys-fail')
     })
     let rightWord = document.createElement('p')
-    rightWord.innerText = 'Right word was: ' + state.word;
+    rightWord.innerText = 'Right word was: ' + app.state.word;
     rightWord.classList.add('right-word')
     document.querySelector('.word').after(rightWord)
 
Index: js/app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const runApp = function () {\r\n    this.state = null;\r\n\r\n    this.render = () => {\r\n        const LETTER_CELL = document.querySelectorAll('.word-el')\r\n        LETTER_CELL.forEach((el) => {\r\n            el.remove()\r\n        })\r\n\r\n        this.state.field.forEach((isGuested, index) => {\r\n            let letter = document.createElement('span')\r\n            letter.classList.add('word-el')\r\n            if (isGuested) {\r\n                letter.innerText = this.state.word[index]\r\n            } else {\r\n                letter.classList.add('word--icon')\r\n            }\r\n            document.querySelector('.word').appendChild(letter)\r\n        })\r\n        if (!(document.querySelector('.word').contains(document.querySelector('.word--icon')))) {\r\n            document.removeEventListener('click', f)\r\n            this.state.setStatus(STATUS_WIN)\r\n        }\r\n\r\n\r\n        //WIN / LOSE / CONTINUE\r\n        switch (this.state.status) {\r\n\r\n            case STATUS_CONTINUE:\r\n                break;\r\n            case STATUS_FAIL:\r\n                console.log('LOSE')\r\n                fail()\r\n                break;\r\n            case STATUS_WIN:\r\n                console.log('WIN')\r\n                win()\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    this.turn = (letter) => {\r\n\r\n        //isGuess()\r\n        const indexes = []\r\n        this.state.word.split('').forEach((char, index) => {\r\n            if (char === letter) {\r\n                indexes.push(index)\r\n            }\r\n        })\r\n        const isCorrect = indexes.length > 0;\r\n        const nextField = this.state.field.map((v, index) => {\r\n            return indexes.includes(index) ? 1 : v\r\n        })\r\n        this.state.setField(nextField)\r\n        if (!isCorrect) {\r\n            this.state.incriseMistakes()\r\n            document.querySelector('.'+letter).classList.add('keys-fail')\r\n        }\r\n        else{\r\n            document.querySelector('.'+letter).classList.add('keys-right')\r\n        }\r\n        //End isGuess\r\n        //Rendering\r\n        this.render()\r\n    }\r\n\r\n    this.init = (newWord) => {\r\n        this.state = createState();\r\n\r\n\r\n        this.state.setWord(newWord)\r\n        const field = new Array(this.state.word.length).fill(0);\r\n        this.state.setField(field)\r\n        alphabet.forEach((chars, index) => {\r\n            const row = chars.map((c) => {\r\n                const el = document.createElement('BUTTON')\r\n                el.classList.add('keyboard--btn')\r\n                el.classList.add(c)\r\n                el.setAttribute('data-action', 'turn')\r\n                el.innerText = c\r\n                return el\r\n            });\r\n            const selector = '[data-keyboard-row=row-' + (index + 1) + ']';\r\n            document.querySelector(selector).append(...row)\r\n        })\r\n        this.render();\r\n    }\r\n\r\n    return this;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/app.js b/js/app.js
--- a/js/app.js	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/js/app.js	(date 1652287928389)
@@ -1,7 +1,7 @@
 const runApp = function () {
     this.state = null;
 
-    this.render = () => {
+    this.render = (flag) => {
         const LETTER_CELL = document.querySelectorAll('.word-el')
         LETTER_CELL.forEach((el) => {
             el.remove()
@@ -19,24 +19,30 @@
         })
         if (!(document.querySelector('.word').contains(document.querySelector('.word--icon')))) {
             document.removeEventListener('click', f)
-            this.state.setStatus(STATUS_WIN)
+            setStatus(STATUS_WIN)
         }
 
+        if(flag){
 
         //WIN / LOSE / CONTINUE
         switch (this.state.status) {
 
             case STATUS_CONTINUE:
+                saveToLocaleStorage()
                 break;
             case STATUS_FAIL:
                 console.log('LOSE')
+
                 fail()
+                localStorage.clear();
                 break;
             case STATUS_WIN:
                 console.log('WIN')
                 win()
+                localStorage.clear();
                 break;
         }
+        }
 
     }
 
@@ -53,9 +59,9 @@
         const nextField = this.state.field.map((v, index) => {
             return indexes.includes(index) ? 1 : v
         })
-        this.state.setField(nextField)
+        setField(nextField)
         if (!isCorrect) {
-            this.state.incriseMistakes()
+            incriseMistakes()
             document.querySelector('.'+letter).classList.add('keys-fail')
         }
         else{
@@ -63,29 +69,29 @@
         }
         //End isGuess
         //Rendering
-        this.render()
+        this.render(true)
     }
 
     this.init = (newWord) => {
-        this.state = createState();
+        this.state = new createState();
 
 
-        this.state.setWord(newWord)
+        setWord(newWord)
         const field = new Array(this.state.word.length).fill(0);
-        this.state.setField(field)
+        setField(field)
         alphabet.forEach((chars, index) => {
             const row = chars.map((c) => {
                 const el = document.createElement('BUTTON')
                 el.classList.add('keyboard--btn')
-                el.classList.add(c)
                 el.setAttribute('data-action', 'turn')
                 el.innerText = c
+                el.classList.add(c)
                 return el
             });
             const selector = '[data-keyboard-row=row-' + (index + 1) + ']';
             document.querySelector(selector).append(...row)
         })
-        this.render();
+        this.render(false);
     }
 
     return this;
Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n    <link rel=\"stylesheet\" href=\"./style.css\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap\" rel=\"stylesheet\">\r\n    <script src=\"js/vocabulary.js\" defer></script>\r\n    <script src=\"js/state.js\" defer></script>\r\n    <script src=\"js/app.js\" defer></script>\r\n    <script src=\"js/script.js\" defer></script>\r\n    <script src=\"js/fail.js\" defer></script>\r\n    <script src=\"js/win.js\" defer></script>\r\n    <script src=\"js/restart.js\" defer></script>\r\n\r\n</head>\r\n\r\n<body>\r\n    <div class=\"game\">\r\n        <img src=\"./img/Gallow-0.svg\" alt=\"Gallow\" class=\"gallow-img\">\r\n        <div class=\"word\">\r\n        </div>\r\n        <div id=\"keyboard\">\r\n            <button class=\"keyboard--btn\" style=\"display: none;\"></button>\r\n            <div data-keyboard-row=\"row-1\" class=\"wrap\"></div>\r\n            <div data-keyboard-row=\"row-2\" class=\"wrap\"></div>\r\n            <div data-keyboard-row=\"row-3\" class=\"wrap\"></div>\r\n        </div>\r\n    </div>\r\n    <button class=\"restart--btn\">RESTART</button>\r\n</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/index.html	(date 1652271275953)
@@ -10,6 +10,7 @@
     <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap" rel="stylesheet">
     <script src="js/vocabulary.js" defer></script>
     <script src="js/state.js" defer></script>
+    <script src="js/locale-storage.js" defer></script>
     <script src="js/app.js" defer></script>
     <script src="js/script.js" defer></script>
     <script src="js/fail.js" defer></script>
Index: js/restart.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function restart(){\r\n    document.querySelectorAll('.keyboard--btn').forEach((el) => {\r\n        el.remove()\r\n    })\r\n        if(document.querySelector('.right-word')!==null)  document.querySelector('.right-word').remove()\r\n    document.querySelector('.gallow-img').setAttribute('src',STAGE_OF_IMG[0])\r\n    app.init( getNewWord())\r\n    document.addEventListener('click', f)\r\n}\r\ndocument.querySelector('.restart--btn').addEventListener('click',restart)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/restart.js b/js/restart.js
--- a/js/restart.js	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/js/restart.js	(date 1652272073911)
@@ -1,4 +1,5 @@
 function restart(){
+    localStorage.clear()
     document.querySelectorAll('.keyboard--btn').forEach((el) => {
         el.remove()
     })
Index: js/locale-storage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/locale-storage.js b/js/locale-storage.js
new file mode 100644
--- /dev/null	(date 1652288177601)
+++ b/js/locale-storage.js	(date 1652288177601)
@@ -0,0 +1,39 @@
+function saveToLocaleStorage() {
+    localStorage.setItem('data-state', JSON.stringify(this.state))
+    const KEYS = document.querySelectorAll('.keyboard--btn')
+    let btns = []
+    KEYS.forEach((el) => {
+        btns.push([
+            el.getAttribute('disabled'),
+            el.getAttribute('class')]
+        )
+    })
+    localStorage.setItem('data-btns', JSON.stringify(btns))
+    localStorage.setItem('data-img', JSON.stringify(document.querySelector('.gallow-img').getAttribute('src')))
+}
+
+function loadFromLocaleStorage() {
+    document.querySelector('.gallow-img').setAttribute('src', JSON.parse(localStorage.getItem('data-img')))
+    const btns_status = JSON.parse(localStorage.getItem('data-btns'))
+    document.querySelector('.keyboard--btn').remove()
+    const KEYS = document.querySelectorAll('.keyboard--btn')
+
+    app.state = JSON.parse(localStorage.getItem('data-state'))
+    KEYS.forEach((el, index) => {
+        if (btns_status[index][0] === 'true') {
+            const indexes = []
+            this.state.word.split('').forEach((char, index) => {
+                if (char === el.innerText) {
+                    indexes.push(index)
+                }
+            })
+            const nextField = this.state.field.map((v, index) => {
+                return indexes.includes(index) ? 1 : v
+            })
+           setField(nextField)
+            app.render(false)
+            el.setAttribute('disabled', 'true')
+        }
+        el.setAttribute('class', btns_status[index][1])
+    })
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c9996411-44d6-41f6-a3e8-cd6585242a38\" name=\"Changes\" comment=\"Works without locale storage\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/Gallow.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"END_GAME_DESIGN\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"28iQEKeMxTlogYIoZdoKlukBymE\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/Алексей/OneDrive/Other/Gallow\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Алексей\\OneDrive\\Other\\Gallow\\js\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c9996411-44d6-41f6-a3e8-cd6585242a38\" name=\"Changes\" comment=\"\" />\r\n      <created>1651696815325</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1651696815325</updated>\r\n      <workItem from=\"1651696818509\" duration=\"7537000\" />\r\n      <workItem from=\"1651770373219\" duration=\"3868000\" />\r\n      <workItem from=\"1651832009871\" duration=\"14111000\" />\r\n      <workItem from=\"1652108597773\" duration=\"20019000\" />\r\n      <workItem from=\"1652220013193\" duration=\"540000\" />\r\n      <workItem from=\"1652220641438\" duration=\"414000\" />\r\n      <workItem from=\"1652252772925\" duration=\"57000\" />\r\n      <workItem from=\"1652259592511\" duration=\"325000\" />\r\n      <workItem from=\"1652259922681\" duration=\"1562000\" />\r\n      <workItem from=\"1652263270771\" duration=\"697000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Works without styling\">\r\n      <created>1652113987986</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652113987986</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Works without styling\">\r\n      <created>1652219605019</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652219605019</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Works without styling\">\r\n      <created>1652260001949</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652260001949</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Works without locale storage\">\r\n      <created>1652263442987</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652263442987</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"master\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"Works without styling\" />\r\n    <MESSAGE value=\"Works without locale storage\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Works without locale storage\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/.idea/workspace.xml	(date 1652288178900)
@@ -4,11 +4,16 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c9996411-44d6-41f6-a3e8-cd6585242a38" name="Changes" comment="Works without locale storage">
-      <change afterPath="$PROJECT_DIR$/.idea/Gallow.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+    <list default="true" id="c9996411-44d6-41f6-a3e8-cd6585242a38" name="Changes" comment="Works without locale storage&#10;Initial commit">
+      <change afterPath="$PROJECT_DIR$/js/locale-storage.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/app.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/app.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/fail.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/fail.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/restart.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/restart.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/script.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/script.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/state.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/state.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -32,7 +37,7 @@
     </option>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="END_GAME_DESIGN" />
+        <entry key="$PROJECT_DIR$" value="master" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -41,29 +46,32 @@
     <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="28iQEKeMxTlogYIoZdoKlukBymE" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "C:/Users/Алексей/OneDrive/Other/Gallow",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "run.code.analysis.last.selected.profile": "pProject Default",
-    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Алексей/OneDrive/Other/Gallow&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\Алексей\OneDrive\Other\Gallow\js" />
@@ -86,7 +94,10 @@
       <workItem from="1652252772925" duration="57000" />
       <workItem from="1652259592511" duration="325000" />
       <workItem from="1652259922681" duration="1562000" />
-      <workItem from="1652263270771" duration="697000" />
+      <workItem from="1652263270771" duration="1441000" />
+      <workItem from="1652264751817" duration="199000" />
+      <workItem from="1652264984673" duration="6851000" />
+      <workItem from="1652284596665" duration="2891000" />
     </task>
     <task id="LOCAL-00001" summary="Works without styling">
       <created>1652113987986</created>
@@ -116,7 +127,21 @@
       <option name="project" value="LOCAL" />
       <updated>1652263442987</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="Works without locale storage">
+      <created>1652263989800</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1652263989800</updated>
+    </task>
+    <task id="LOCAL-00006" summary="Works without locale storage&#10;Initial commit">
+      <created>1652264121317</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1652264121317</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -128,12 +153,13 @@
         <entry key="MAIN">
           <value>
             <State>
+              <option name="SHOW_ROOT_NAMES" value="true" />
               <option name="FILTERS">
                 <map>
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="master" />
+                        <option value="locale_storage" />
                       </list>
                     </value>
                   </entry>
@@ -161,12 +187,14 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
     <ignored-roots>
-      <path value="$PROJECT_DIR$" />
+      <path value="$PROJECT_DIR$/Gallow" />
     </ignored-roots>
     <MESSAGE value="Works without styling" />
     <MESSAGE value="Works without locale storage" />
-    <option name="LAST_COMMIT_MESSAGE" value="Works without locale storage" />
+    <MESSAGE value="Works without locale storage&#10;Initial commit" />
+    <option name="LAST_COMMIT_MESSAGE" value="Works without locale storage&#10;Initial commit" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n    <mapping directory=\"$PROJECT_DIR$/Gallow\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 8f7313e6ed5df98660c153895fbd206e5e241ae8)
+++ b/.idea/vcs.xml	(date 1652265037301)
@@ -2,6 +2,5 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/Gallow" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
